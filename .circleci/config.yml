version: 2.1  # CircleCI version

executors:
  terraform-executor:
    docker:
      - image: hashicorp/terraform:latest
    working_directory: ~/repo

jobs:
  terraform-apply:
    executor: terraform-executor
    steps:
      - checkout  # Pull the latest code from the repository

      # Install AWS CLI to allow Terraform to interact with AWS resources
      - run:
          name: Install AWS CLI
          command: |
            apk add --no-cache aws-cli
            aws --version  # Verify installation  

      
      # Identify the latest modified `.tfvars` file from the last commit
      - run:
          name: Find Latest tfvars File
          command: |
            LATEST_FILE=$(git diff --name-only HEAD^ HEAD | grep '\.tfvars$' | tail -n 1)
            if [ -z "$LATEST_FILE" ]; then
              echo "No tfvars file changed, skipping apply."
              circleci-agent step halt  # Stop pipeline if no changes detected
              exit 0
            fi
            
            # Extract the filename without path and extension
            BASENAME=$(basename "$LATEST_FILE" .tfvars)
            echo "Extracted Name: $BASENAME"
            echo "Latest Terraform vars file: $LATEST_FILE"
            echo "export LATEST_FILE=$LATEST_FILE" >> $BASH_ENV  # Save it for the next steps
            echo "export BASENAME=$BASENAME" >> $BASH_ENV  # Save it for the next steps
      
      # Initialize Terraform (fetch provider plugins and configure backend)
      - run:
          name: Terraform Init
          command: |
            source $BASH_ENV
            cd terraform
            terraform init -backend-config="key=environments/${BASENAME}.tfstate"
            cd ..

      # Change directory to Terraform and run Terraform Plan
      - run:
          name: Terraform Plan
          command: |
            source $BASH_ENV
            cd terraform
            terraform plan -var-file="../$LATEST_FILE" -lock=false
            cd ..

      # Apply changes automatically without manual approval
      - run:
          name: Terraform Apply
          command: |
            source $BASH_ENV
            cd terraform
            terraform apply -auto-approve -var-file="../$LATEST_FILE" -lock=false
            cd ..

workflows:
  version: 2
  apply-on-merge:
    jobs:
      - terraform-apply:
          filters:
            branches:
              only: main  # This workflow triggers ONLY when merging into `main`
